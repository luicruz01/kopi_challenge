name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install ruff  # For linting

    - name: Lint with ruff
      run: |
        ruff check api/
        ruff format --check api/

    - name: Run tests
      run: |
        pytest -v --tb=short
      env:
        REDIS_URL: redis://localhost:6379

    - name: Container smoke test
      run: |
        # Start services with Docker Compose
        docker compose up -d
        sleep 15
        
        # Test health endpoint (expect 200)
        curl -f http://localhost:8000/healthz || exit 1
        
        # Test chat endpoint (expect 200)
        curl -f -X POST http://localhost:8000/api/v1/chat \
          -H "Content-Type: application/json" \
          -d '{"message": "Hello world"}' || exit 1
        
        # Clean up
        docker compose down

    - name: Create submission archive
      run: |
        git archive --format=tar.gz --prefix=chat-api/ HEAD > submission.tar.gz

    - name: Upload submission artifact
      uses: actions/upload-artifact@v4
      with:
        name: submission
        path: submission.tar.gz
        retention-days: 30
